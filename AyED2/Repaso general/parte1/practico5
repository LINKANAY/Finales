#Ejercicio 1
Completaar la implementacion de listas dada en el teorico usando punteros.

#Ejercicio 2
Dada una constante natural N, implementar el TAD Lista de elementos de tipo T, usando un arreglo de tamaño N y un natural que indica cuantos elementos del arreglo son ocupados por elementos de la lista. 
¿Esta implementacion impone nuevas restricciones? 
¿En que funcion o procedimiento tenemos una nueva precondicion?

#Ejercicio 3
3. Implementar el procedimiento add at que toma una lista de tipo T, un natural n, un elemento e de tipo T, y agrega el elemento e en la posicion n, quedando todos los elementos siguientes a continuacion.
Esta operacion tiene como precondicion que n sea menor al largo de la lista.
AYUDA: Puede ayudarte usar las operaciones copy, take y drop.

#Ejercicio 4 
(a) Especificar un TAD tablero para mantener el tanteador en contiendas deportivas entre dos equipos (equipo A y equipo B). 
Debera tener un constructor para el comienzo del partido (tanteador inicial), un constructor para registrar un nuevo tanto del equipo A y uno para registrar un nuevo tanto del equipo B. 
El tablero solo registra el estado actual del tanteador, por lo tanto el orden en que se fueron anotando los tantos es irrelevante.
Ademas se requiere operaciones para comprobar si el tanteador esta en cero, si el equipo A ha anotado algun tanto, si el equipo B ha anotado algun tanto, una que devuelva verdadero si y solo si el equipo A va ganando, otra que devuelva verdadero si y solo si el equipo B va ganando, y
una que devuelva verdadero si y solo si se registra un empate.
Finalmente habra una operacion que permita anotarle un numero n de tantos a un equipo y otra que permita “castigarlo” restandole un numero n de tantos. En este ultimo caso, si se le restan mas tantos de los acumulados equivaldra a no haber anotado ninguno desde el comienzo del partido.
(b) Implementar el TAD Tablero utilizando una tupla con dos contadores: uno que indique los tantos del equipo A, y otro que indique los tantos del equipo B.
(c) Implementar el TAD Tablero utilizando una tupla con dos naturales: uno que indique los tantos del equipo A, y otro que indique los tantos del equipo B. 
¿Hay alguna diferencia con la implementacion del inciso anterior? 
¿Alguna operacion puede resolverse mas eficientemente?

#Ejercicio 5 
Especificar el TAD Conjunto finito de elementos de tipo T. 
Como constructores considerar el conjunto vacio y el que agrega un elemento a un conjunto. Como operaciones: una que chequee si un elemento e pertenece a un conjunto c, una que chequee si un conjunto es vacio, la operacion de unir un conjunto a otro , insersectar un conjunto con otro y obtener la diferencia. Estas ultimas tres operaciones deberian especificarse como procedimientos que toman dos conjuntos y modifican el primero de ellos.

#Ejercicio 6
6. Implementar el TAD Conjunto finito de elementos de tipo T utilizando:
(a) una lista de elementos de tipo T, donde el constructor para agregar elementos al conjunto se implementa directamente con el constructor addl de las listas.
(b) una lista de elementos de tipo T, donde se asegure siempre que la lista esta ordenada crecientemente y no tiene elementos repetidos. 
Debes tener cuidado especialmente con el constructor de agregar elemento y las operaciones de union, interseccion y diferencia. 
A la propiedad de mantener siempre la lista ordenada y sin repeticiones le llamamos invariante de representacion.
Ayuda: Para implementar el constructor de agregar elemento puede serte muy util la operacion add at implementada en el punto 3.